// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Service Implementation

#include "CalculatorImpl.h"
#include "presageCallback.h"
#include "presage.h"
#include <vector>
#include "P0Callback.h"
#include <iostream>
#include "TestClass.h"
#include <typeinfo>

namespace samples
{
	
	CalculatorImpl::CalculatorImpl()
	{
	}
	
	CalculatorImpl::~CalculatorImpl()
	{
	}
	
	void CalculatorImpl::OnCreate()
	{
		// this function is called when service instance is created and registered
	}
	
	void CalculatorImpl::OnDestroy()
	{
		// this function is called immediately before service instance destruction
	}
	
	std::vector<std::string> CalculatorImpl::Word(std::string context)
	{
		std::vector<std::string> tResult;
		std::cout << "trace1" << std::endl;
		context += " ";
		P0Callback callback(context);
		
		std::cout << TestClass::testFunction() << std::endl;
		// Presage::presage5();
		Presage presageInstance(&callback);
		
		tResult = presageInstance.predict ();
		
		// std::cout << "-->> tResult: " << tResult <<< std::endl;
		std::cout << "-->> tResult[1]: " << std::endl;
		std::cout << (int) tResult.size() << std::endl;
		std::cout << tResult[1] << std::endl;
		//  tResult = presage.predict();
		std::cout << "trace4" << std::endl;
        for (int i = 0; i < tResult.size(); i++) {
            std::cout << i << ':' << tResult[i] << std::endl;
        }
		
		return tResult;  // result
	}
	
	int CalculatorImpl::Add(int a, int b)
	{
		int tResult;
		// TODO: place your code here
		
		return a + b;  // result
	}
	
	int CalculatorImpl::Sub(int a, int b)
	{
		int tResult;
		// TODO: place your code here
		
		return a - b;  // result
	}
	
	
}
